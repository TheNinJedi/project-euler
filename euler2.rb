# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.

# first stab at it.
# @array = [1, 2, 3, 5, 8, 13, 21, 34, 55, 89,]
#
# def fib (array)
#   if array.last <= 4000000
#     array << (array[-2] + array[-1])
#   end
# end
#
# def run
#   fib.
#   run fib until the array.last <= 4000000
# end
#
#
# if array[-1] <= 4000000
#   array << (array[-2] + array[-1])
# end


#Theres two steps. get all the numbers in an array. then add them together.
seq = []
n1 = 1
n2 = 2
seq.push(n1).push(n2)
next_number = n1 + n2

while next_number < 4000000
  seq << next_number
  n1 = n2
  n2 = seq.last
  next_number = n1 + n2
end

# add even numbers together
sum = 0

seq.each do |num|
  if(num%2 == 0)
    sum += num
    puts num
  end
end
puts "Solution: " + sum.to_s
